{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/root.tsx", "../app/application/ui/components/common/Container.tsx", "../app/application/ui/components/common/Typography.tsx", "../app/services/cookies/userPreferences.ts", "../app/application/cases/cookieSettings/getSettingsFromRequest.ts", "../app/application/cases/cookieSettings/setSettingsAndRedirect.ts", "../app/services/hooks/theme-provider.tsx", "../app/routes/admin/dashboard/experiences/add.tsx", "../app/services/queries/auth.ts", "../app/services/api.ts", "../app/lib/cache.ts", "../app/services/cookies/auth.ts", "../app/services/hooks/session.server.ts", "../app/services/queries/experiences.ts", "../app/lib/form.ts", "../app/application/ui/components/admin/Sider.tsx", "../app/lib/file.ts", "../app/routes/admin/dashboard/developments.tsx", "../app/routes/admin/dashboard/index.tsx", "../app/lib/date.ts", "../app/routes/admin/index.tsx", "../app/routes/index.tsx", "../app/application/ui/components/common/Header.tsx", "../app/application/ui/components/common/Footer.tsx", "../app/application/ui/components/about/Jumbotron.tsx", "../app/application/ui/components/about/ProjectsList.tsx", "../app/application/ui/components/about/ExperiencesList.tsx", "../app/application/ui/screens/AboutScreen.tsx", "../app/services/queries/developments.ts", "../app/application/cases/experiences/getSortedExperiences.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import admin from \"firebase-admin\";\nimport { getApps } from \"firebase/app\";\nimport { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\";\n\nconst serviceAccount = require(\"~/firebase-service-account.json\");\nserviceAccount.private_key_id = process.env.FIREBASE_PRIVATE_KEY_ID;\nserviceAccount.private_key = process.env.FIREBASE_PRIVATE_KEY;\n\nif (getApps().length === 0) {\n  admin.initializeApp({\n    credential: admin.credential.cert(serviceAccount),\n  });\n}\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  ActionFunction,\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useTransition,\n} from \"@remix-run/react\";\nimport classNames from \"classnames\";\n\nimport { Container } from \"~/application/ui/components/common/Container\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\nimport { useGetSettingsFromRequest } from \"~/application/cases/cookieSettings/getSettingsFromRequest\";\nimport { useSetSettingsAndRedirect } from \"~/application/cases/cookieSettings/setSettingsAndRedirect\";\n\nimport { ThemeProvider } from \"~/services/hooks/theme-provider\";\n\nimport tailwindStylesUrl from \"~/styles/tailwind.css\";\nimport globalStylesUrl from \"~/styles/global.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"preload\",\n      href: \"/images/background.svg\",\n      as: \"image\",\n      type: \"image/svg+xml\",\n    },\n    { rel: \"stylesheet\", href: tailwindStylesUrl },\n    { rel: \"stylesheet\", href: globalStylesUrl },\n  ];\n};\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <Document>\n        <Layout>\n          <Outlet />\n        </Layout>\n      </Document>\n    </ThemeProvider>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <Container>\n          <h1>There was an error</h1>\n          <Typography>{error.message}</Typography>\n          <hr />\n          <Typography>\n            Please contact me by{\" \"}\n            <a href=\"mailto:jasonvanmalder@gmail.com\">email</a>\n          </Typography>\n        </Container>\n      </Layout>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <Typography>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </Typography>\n      );\n      break;\n    case 404:\n      message = (\n        <Typography>\n          Oops! Looks like you tried to visit a page that does not exist.\n        </Typography>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { getSettingsFromRequest } = useGetSettingsFromRequest();\n  return getSettingsFromRequest(request);\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const { setSettingsAndRedirect } = useSetSettingsAndRedirect();\n  return setSettingsAndRedirect(request);\n};\n\nexport const Document = ({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) => {\n  // const [theme] = useTheme();\n  const { state } = useTransition();\n\n  return (\n    <html\n      lang=\"en\"\n      className={classNames({\n        // dark: theme === Theme.DARK,\n      })}\n    >\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body className={classNames(\"bg-slate-100 dark:bg-slate-900\")}>\n        <div\n          className={classNames(\"loading-bar\", {\n            active: state === \"loading\",\n          })}\n        />\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n};\n\nexport const Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"background min-h-screen\">\n      <main>{children}</main>\n    </div>\n  );\n};\n", "import classNames from \"classnames\";\n\ninterface IOwnProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const Container = ({ children, className }: IOwnProps) => {\n  return (\n    <div className={classNames(\"app container mx-auto px-20\", className)}>\n      {children}\n    </div>\n  );\n};\n", "import classNames from \"classnames\";\n\nexport type Typography = \"title\" | \"subtitle\" | \"text\" | \"semibold\";\n\ninterface IOwnProps {\n  variant?: Typography;\n  className?: string;\n  style?: React.CSSProperties;\n  level?: number;\n  children: React.ReactNode;\n}\n\nexport const Typography: React.FC<IOwnProps> = ({\n  variant = \"text\",\n  className,\n  style,\n  level,\n  children,\n}) => {\n  const textSizeDefined =\n    className?.includes(\"text-md\") ||\n    className?.includes(\"text-lg\") ||\n    className?.includes(\"text-xl\") ||\n    className?.includes(\"text-2xl\") ||\n    className?.includes(\"text-3xl\") ||\n    className?.includes(\"text-4xl\") ||\n    className?.includes(\"text-5xl\") ||\n    className?.includes(\"text-6xl\") ||\n    className?.includes(\"text-7xl\") ||\n    className?.includes(\"text-8xl\") ||\n    className?.includes(\"text-9xl\");\n\n  const fontWeightDefined = className?.includes(\"font-\");\n\n  const isTitle = [\"title\", \"subtitle\"].includes(variant);\n  const isText = [\"text\"].includes(variant);\n\n  const classes = classNames(\n    {\n      \"sm:text-2xl lg:text-3xl xl:text-4xl\":\n        isTitle && level === 1 && !textSizeDefined,\n      \"sm:text-xl lg:text-2xl xl:text-3xl\":\n        isTitle && level === 2 && !textSizeDefined,\n      \"sm:text-lg lg:text-xl xl:text-2xl\":\n        isTitle && level === 3 && !textSizeDefined,\n      \"sm:text-md lg:text-lg xl:text-xl\":\n        isTitle && level === 4 && !textSizeDefined,\n      \"sm:text-sm lg:text-md xl:text-lg\":\n        isTitle && level === 5 && !textSizeDefined,\n      \"sm:text-xs lg:text-sm xl:text-md\":\n        ((isTitle && level === 6) || isText) && !textSizeDefined,\n      \"font-semibold\": [\"semibold\"].includes(variant) && !fontWeightDefined,\n      \"font-bold\": [\"bold\"].includes(variant) && !fontWeightDefined,\n    },\n    className\n  );\n\n  if ([\"title\", \"subtitle\"].includes(variant)) {\n    if (level === 1) {\n      return (\n        <h1 className={classes} style={style}>\n          {children}\n        </h1>\n      );\n    }\n\n    if (level === 2) {\n      return (\n        <h2 className={classes} style={style}>\n          {children}\n        </h2>\n      );\n    }\n\n    if (level === 3) {\n      return (\n        <h3 className={classes} style={style}>\n          {children}\n        </h3>\n      );\n    }\n\n    if (level === 4) {\n      return (\n        <h4 className={classes} style={style}>\n          {children}\n        </h4>\n      );\n    }\n\n    if (level === 5) {\n      return (\n        <h5 className={classes} style={style}>\n          {children}\n        </h5>\n      );\n    }\n\n    if (level === 6) {\n      return (\n        <h6 className={classes} style={style}>\n          {children}\n        </h6>\n      );\n    }\n  }\n\n  return (\n    <p className={classes} style={style}>\n      {children}\n    </p>\n  );\n};\n", "import { createCookie } from \"@remix-run/node\";\n\nexport const userPreferences = createCookie(\"userPreferences\", {\n  httpOnly: true,\n  secure: true,\n  sameSite: true,\n  maxAge: 60 * 60 * 24 * 365 * 100,\n  secrets: process.env.SECRET ? [process.env.SECRET] : [],\n});\n", "import { CookieSettings } from \"~/domain/cookieSettings\";\nimport { userPreferences } from \"~/services/cookies/userPreferences\";\n\nexport const useGetSettingsFromRequest = () => {\n  const getSettingsFromRequest = async (\n    request: Request\n  ): Promise<CookieSettings> => {\n    const cookieHeader = request.headers.get(\"Cookie\");\n    return (await userPreferences.parse(cookieHeader)) || {};\n  };\n\n  return { getSettingsFromRequest };\n};\n", "import { redirect } from \"@remix-run/node\";\n\nimport { CookieSettings } from \"~/domain/cookieSettings\";\n\nimport { userPreferences } from \"~/services/cookies/userPreferences\";\n\nexport const useSetSettingsAndRedirect = () => {\n  const setSettingsAndRedirect = async (request: Request) => {\n    const cookieHeader = request.headers.get(\"Cookie\");\n    const bodyParams = await request.formData();\n    const destination = bodyParams.get(\"destination\")?.toString() ?? \"/\";\n\n    let cookie: CookieSettings =\n      (await userPreferences.parse(cookieHeader)) || {};\n\n    cookie = {\n      ...cookie,\n      darkModeEnabled: bodyParams.get(\"darkModeEnabled\") === \"true\",\n    };\n\n    return redirect(destination, {\n      headers: {\n        \"Set-Cookie\": await userPreferences.serialize(cookie),\n      },\n    });\n  };\n\n  return { setSettingsAndRedirect };\n};\n", "import { createContext, useContext, useState } from \"react\";\nimport type { Dispatch, ReactNode, SetStateAction } from \"react\";\n\nenum Theme {\n  DARK = \"dark\",\n  LIGHT = \"light\",\n}\n\ntype ThemeContextType = [Theme | null, Dispatch<SetStateAction<Theme | null>>];\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme | null>(Theme.LIGHT);\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n\n  return context;\n}\n\nexport { Theme, ThemeProvider, useTheme };\n", "import { FaPaperPlane } from \"react-icons/fa\";\nimport { Form } from \"@remix-run/react\";\nimport { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\n\nimport { useLogoutQuery } from \"~/services/queries/auth\";\nimport { useSessionChecker } from \"~/services/hooks/session.server\";\nimport {\n  useAddExperienceQuery,\n  useExperiencesQuery,\n} from \"~/services/queries/experiences\";\n\nimport Sider from \"~/application/ui/components/admin/Sider\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\nimport { toBase64 } from \"~/lib/file\";\nimport { ChangeEvent, useState } from \"react\";\n\nexport let meta: MetaFunction = () => ({\n  title: \"Jason Van Malder\",\n  description: \"25yo, software engineer and student by night.\",\n});\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n\n  const { run: logout } = useLogoutQuery(request);\n  const { run: addExperience } = useAddExperienceQuery();\n\n  switch (formData.get(\"action\")) {\n    case \"addExperience\":\n      return await addExperience(formData);\n    case \"logout\":\n      return await logout();\n  }\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  const session = await useSessionChecker(request);\n\n  if (session.status === 302) {\n    return session;\n  }\n\n  const experiences = await useExperiencesQuery().run();\n\n  return { session, experiences };\n}\n\nconst AddExperience = () => {\n  const [file, setFile] = useState<string>(\"\");\n\n  const onFileUploaded = async (e: ChangeEvent<HTMLInputElement>) => {\n    const fileCandidate = e.target.files?.[0];\n\n    if (fileCandidate) {\n      const b64 = await toBase64(fileCandidate);\n      setFile(b64 ?? \"\");\n    }\n  };\n\n  return (\n    <div className=\"flex\">\n      <Sider />\n\n      <div className=\"flex-1 p-8\">\n        <div className=\"mb-6 flex justify-between\">\n          <Typography variant=\"title\" level={1} className=\"font-bold\">\n            Add a new experience\n          </Typography>\n        </div>\n\n        <Form method=\"post\" encType=\"multipart/form-data\" className=\"w-1/2\">\n          <input type=\"hidden\" name=\"action\" value=\"addExperience\" />\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"place\"\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              Place\n            </label>\n            <input\n              type=\"text\"\n              id=\"place\"\n              name=\"place\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              placeholder=\"Google\"\n              required\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"role\"\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              Role\n            </label>\n            <input\n              type=\"text\"\n              id=\"role\"\n              name=\"role\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              placeholder=\"Software Engineer\"\n              required\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"url\"\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              URL\n            </label>\n            <input\n              type=\"text\"\n              id=\"url\"\n              name=\"url\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              placeholder=\"https://google.com\"\n              required\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"dateFrom\"\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              Start date\n            </label>\n            <input\n              type=\"text\"\n              id=\"dateFrom\"\n              name=\"dateFrom\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              placeholder=\"Sep 2022\"\n              required\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"dateTo\"\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              End date\n            </label>\n            <input\n              type=\"text\"\n              id=\"dateTo\"\n              name=\"dateTo\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              placeholder=\"Sep 2023\"\n              required\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <label\n              htmlFor=\"image\"\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              Image\n            </label>\n            <input\n              type=\"file\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              placeholder=\"Sep 2023\"\n              required\n              onChange={onFileUploaded}\n            />\n            <input type=\"hidden\" id=\"image\" name=\"image\" value={file} />\n          </div>\n\n          <div className=\"flex items-start mb-6\">\n            <div className=\"flex items-center h-5\">\n              <input\n                id=\"isExtiaConsulting\"\n                name=\"isExtiaConsulting\"\n                type=\"checkbox\"\n                className=\"w-4 h-4 bg-gray-50 rounded border border-gray-300 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800\"\n              />\n            </div>\n            <label\n              htmlFor=\"isExtiaConsulting\"\n              className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >\n              Extia consulting\n            </label>\n          </div>\n\n          <button className=\"hoverableButton\">\n            <div>\n              <span className=\"cursor-pointer button p-2\">\n                <FaPaperPlane className=\"mr-2\" /> Submit\n              </span>\n            </div>\n          </button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddExperience;\n", "import { redirect, TypedResponse } from \"@remix-run/node\";\n\nimport { auth } from \"~/services/api\";\nimport { destroySession, getSession } from \"~/services/cookies/auth\";\n\nexport type LogoutQuery = {\n  run: () => Promise<TypedResponse<never>>;\n};\n\nexport const useLogoutQuery = (request: Request): LogoutQuery => {\n  const logout = async (): Promise<TypedResponse<never>> => {\n    await auth.signOut();\n    await destroySession(await getSession(request.headers.get(\"Cookie\")));\n    return redirect(\"/\");\n  };\n\n  return {\n    run: async (): Promise<TypedResponse<never>> => logout(),\n  };\n};\n", "import { getAuth } from \"firebase/auth\";\nimport { getApp, getApps, initializeApp } from \"firebase/app\";\nimport { collection, getDocs, getFirestore, addDoc } from \"firebase/firestore\";\n\nimport cache from \"~/lib/cache\";\n\nif (getApps().length === 0) {\n  initializeApp({\n    apiKey: \"AIzaSyCWqRy_mfGNqY7d74F68xtUN_rMFwNuTVY\",\n    authDomain: \"jvnm-dev.firebaseapp.com\",\n    projectId: \"jvnm-dev\",\n  });\n}\n\nconst auth = getAuth(getApp());\nconst db = getFirestore(getApp());\n\nconst getCollection = async <T>(name: string): Promise<T[]> => {\n  const cachedData = cache().get<T[]>(name);\n\n  if (cachedData) {\n    return cachedData;\n  }\n\n  const querySnapshot = await getDocs(collection(db, name));\n\n  const data = querySnapshot.docs.map((doc) => {\n    const id = doc.id;\n    const data = doc.data();\n\n    return {\n      id: id,\n      ...data,\n    } as T;\n  });\n\n  cache().set<T[]>(name, data);\n\n  return data;\n};\n\nconst addDocument = async <T>(name: string, data: T): Promise<T> => {\n  await addDoc(collection(db, name), data as Record<string, any>);\n\n  cache().deleteEntry(name);\n\n  return data;\n};\n\nexport { auth, db, getCollection, addDocument };\n", "class Cache {\n  private entries = new Map<string, any>();\n  private expirationEntries = new Map<string, number>();\n\n  get<T = any>(key: string): T | undefined {\n    if (\n      this.expirationEntries.has(key) &&\n      (this.expirationEntries.get(key) ?? 0) < Date.now()\n    ) {\n      this.deleteEntry(key);\n      return;\n    }\n\n    return this.entries.get(key);\n  }\n\n  set<T = any>(key: string, value: T): void {\n    this.entries.set(key, value);\n    this.expirationEntries.set(key, Date.now() + 1000 * 60 * 15);\n  }\n\n  has(key: string): boolean {\n    return this.entries.has(key);\n  }\n\n  deleteEntry(key: string): void {\n    this.entries.delete(key);\n  }\n\n  clear(): void {\n    this.entries.clear();\n  }\n}\n\ntype ExtendedGlobal = typeof globalThis & {\n  cache: Cache;\n};\n\nexport default () => {\n  const extendedGlobal = global as ExtendedGlobal;\n\n  if (!extendedGlobal.cache) {\n    extendedGlobal.cache = new Cache();\n  }\n\n  return extendedGlobal.cache;\n};\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\nconst { getSession, commitSession, destroySession } =\n  createCookieSessionStorage({\n    cookie: {\n      name: \"firebase:auth\",\n      httpOnly: true,\n      maxAge: 60 * 60 * 24,\n      secure: true,\n      secrets: process.env.SECRET ? [process.env.SECRET] : [],\n    },\n  });\n\nexport { getSession, commitSession, destroySession };\n", "import { auth } from \"firebase-admin\";\nimport { redirect, Response } from \"@remix-run/node\";\nimport { commitSession, getSession } from \"~/services/cookies/auth\";\n\nexport const useSessionChecker = async (request: Request) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  if (session.data.access_token) {\n    try {\n      const result = await auth().verifyIdToken(session.data.access_token);\n\n      if (result.uid === process.env.BOSS_UID) {\n        return new Response(session.data.access_token, {\n          status: 200,\n        });\n      }\n    } catch (e) {\n      redirect(\"/admin\");\n    }\n  }\n\n  return redirect(\"/admin\");\n};\n\nexport const useSessionCommitter = async (request: Request, user: any) => {\n  if (user && user.uid === process.env.BOSS_UID) {\n    const session = await getSession(request.headers.get(\"Cookie\"));\n    session.set(\"access_token\", user.stsTokenManager.accessToken);\n\n    return redirect(\"/admin/dashboard\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session, {\n          expires: new Date(Date.now() + 60 * 60 * 24),\n        }),\n      },\n    });\n  }\n\n  return {};\n};\n", "import { redirect, TypedResponse } from \"@remix-run/node\";\n\nimport { Experience } from \"~/domain/experience\";\nimport { serializeFormData } from \"~/lib/form\";\nimport { addDocument, getCollection } from \"~/services/api\";\n\nexport const key = \"experiences\";\n\nexport type ExperiencesQuery = {\n  run: () => Promise<Experience[]>;\n};\n\nexport const useExperiencesQuery = (): ExperiencesQuery => {\n  const fetchExperiences = async (): Promise<Experience[]> => {\n    return getCollection(key);\n  };\n\n  return {\n    run: async (): Promise<Experience[]> => fetchExperiences(),\n  };\n};\n\nexport type AddExperienceQuery = {\n  run: (formData: FormData) => Promise<TypedResponse<never>>;\n};\n\nexport const useAddExperienceQuery = (): AddExperienceQuery => {\n  const addExperience = async (\n    formData: FormData\n  ): Promise<TypedResponse<never>> => {\n    formData.delete(\"action\");\n    const experience = serializeFormData<Experience>(formData);\n\n    await addDocument(key, experience);\n\n    return redirect(\"/admin/dashboard\");\n  };\n\n  return {\n    run: async (formData: FormData): Promise<TypedResponse<never>> =>\n      addExperience(formData),\n  };\n};\n", "export const serializeFormData = <T>(formData: FormData): T => {\n  return Object.fromEntries(formData) as T;\n};\n", "import { Form, Link, useLocation } from \"@remix-run/react\";\n\nconst EXPERIENCES_PATH = \"/admin/dashboard\";\nconst DEVELOPMENTS_PATH = \"/admin/dashboard/developments\";\n\nconst Sider = () => {\n  const activeClassName = \"text-blue-700 rounded bg-blue-50\";\n  const notActiveClassName =\n    \"text-gray-500 rounded hover:bg-gray-50 hover:text-gray-700 \";\n\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  const isExperiencesActive = pathname === EXPERIENCES_PATH;\n  const isDevelopmentsActive = pathname === DEVELOPMENTS_PATH;\n\n  return (\n    <div className=\"flex flex-col justify-between w-16 h-screen bg-white border-r sticky top-0 left-0 z-10\">\n      <div>\n        <div className=\"inline-flex items-center justify-center w-16 h-16\">\n          <img src=\"/favicon.ico\" className=\"block w-10 h-10 rounded-lg\" />\n        </div>\n\n        <div className=\"border-t border-gray-100\">\n          <nav className=\"flex flex-col p-2\">\n            <ul>\n              <li>\n                <Link\n                  to={EXPERIENCES_PATH}\n                  className={`${\n                    isExperiencesActive ? activeClassName : notActiveClassName\n                  } flex justify-center px-2 py-1.5 relative group`}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"w-5 h-5 opacity-75\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                    />\n                  </svg>\n\n                  <span className=\"absolute z-10 text-xs font-medium text-white bg-gray-900 left-full ml-4 px-2 py-1.5 top-1/2 -translate-y-1/2 -translate-x-96 rounded group-hover:translate-x-0\">\n                    Experiences\n                  </span>\n                </Link>\n              </li>\n\n              <li className=\"mt-2\">\n                <Link\n                  to={DEVELOPMENTS_PATH}\n                  className={`${\n                    isDevelopmentsActive ? activeClassName : notActiveClassName\n                  } flex justify-center px-2 py-1.5 relative group`}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"w-5 h-5 opacity-75\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                    />\n                  </svg>\n\n                  <span className=\"absolute z-10 text-xs font-medium text-white bg-gray-900 left-full ml-4 px-2 py-1.5 top-1/2 -translate-y-1/2 -translate-x-96 rounded group-hover:translate-x-0\">\n                    Developments\n                  </span>\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n\n      <div className=\"sticky inset-x-0 bottom-0 p-2 bg-white border-t border-gray-100\">\n        <Form method=\"post\">\n          <input type=\"hidden\" name=\"action\" value=\"logout\" />\n\n          <button\n            type=\"submit\"\n            className=\"flex justify-center w-full px-2 py-1.5 text-sm text-gray-500 rounded-lg hover:bg-gray-50 hover:text-gray-700 group relative\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-5 h-5 opacity-75\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n              />\n            </svg>\n\n            <span className=\"absolute text-xs font-medium text-white bg-gray-900 left-full ml-4 px-2 py-1.5 top-1/2 -translate-y-1/2 rounded opacity-0 group-hover:opacity-100\">\n              Logout\n            </span>\n          </button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Sider;\n", "export const toBase64 = (file: File) =>\n  new Promise((resolve: (value?: string) => void, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result?.toString());\n    reader.onerror = (error) => reject(error);\n  });\n", "import {\n  ActionArgs,\n  LoaderArgs,\n  MetaFunction,\n  redirect,\n} from \"@remix-run/node\";\n\nimport { auth } from \"~/services/api\";\nimport { destroySession, getSession } from \"~/services/cookies/auth\";\nimport { useSessionChecker } from \"~/services/hooks/session.server\";\n\nimport Sider from \"~/application/ui/components/admin/Sider\";\nimport { useLogoutQuery } from \"~/services/queries/auth\";\n\nexport let meta: MetaFunction = () => ({\n  title: \"Jason Van Malder\",\n  description: \"25yo, software engineer and student by night.\",\n});\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n\n  const { run: logout } = useLogoutQuery(request);\n\n  switch (formData.get(\"action\")) {\n    case \"logout\":\n      return await logout();\n  }\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  return useSessionChecker(request);\n}\n\nconst AdminDevelopments = () => {\n  return <Sider />;\n};\n\nexport default AdminDevelopments;\n", "import { FaPlus } from \"react-icons/fa\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\n\nimport { formatDate } from \"~/lib/date\";\n\nimport { Experience } from \"~/domain/experience\";\n\nimport { useLogoutQuery } from \"~/services/queries/auth\";\nimport { useSessionChecker } from \"~/services/hooks/session.server\";\nimport { useExperiencesQuery } from \"~/services/queries/experiences\";\n\nimport Sider from \"~/application/ui/components/admin/Sider\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\nexport let meta: MetaFunction = () => ({\n  title: \"Jason Van Malder\",\n  description: \"25yo, software engineer and student by night.\",\n});\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n\n  const { run: logout } = useLogoutQuery(request);\n\n  switch (formData.get(\"action\")) {\n    case \"logout\":\n      return await logout();\n  }\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  const session = await useSessionChecker(request);\n\n  if (session.status === 302) {\n    return session;\n  }\n\n  const experiences = await useExperiencesQuery().run();\n\n  return { session, experiences };\n}\n\nconst AdminDashboard = () => {\n  const { experiences } = useLoaderData();\n\n  return (\n    <div className=\"flex\">\n      <Sider />\n\n      <div className=\"flex-1 p-8\">\n        <div className=\"mb-6 flex justify-between align-middle\">\n          <Typography variant=\"title\" level={1} className=\"font-bold\">\n            Experiences\n          </Typography>\n          <Link\n            to=\"/admin/dashboard/experiences/add\"\n            className=\"hoverableButton\"\n          >\n            <div>\n              <span className=\"cursor-pointer button p-2\">\n                <FaPlus className=\"mr-2\" /> Add a new experience\n              </span>\n            </div>\n          </Link>\n        </div>\n        <div className=\"grid grid-cols-1 gap-1 w-full\">\n          {experiences.map((experience: Experience) => (\n            <a\n              key={`${experience.place}`}\n              href={experience.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"relative mb-4 bg-white bg-opacity-50 rounded-lg shadow-lg hover:bg-opacity-100 transition ease-in-out duration-500 hoverableButton cursor-pointer dark:bg-slate-900 dark:text-slate-100 dark:shadow-indigo-500/25\"\n            >\n              <div className=\"flex items-center h-full\">\n                <img\n                  src={experience.image}\n                  alt={experience.place}\n                  className=\"h-16 rounded-lg shadow-md m-4 dark:shadow-indigo-500/25\"\n                />\n                <div className=\"m-4 ml-0\">\n                  <Typography variant=\"title\" level={3} className=\"font-normal\">\n                    {experience.role}\n                  </Typography>\n                  <Typography>\n                    {formatDate(experience.dateFrom)} -{\" \"}\n                    {formatDate(experience.dateTo)}\n                  </Typography>\n                </div>\n                <div className=\"flex-1 flex justify-end h-full\">\n                  <span className=\"cursor-pointer button px-4 h-full rounded-r-lg experience-button\">\n                    Edit\n                  </span>\n                </div>\n\n                {experience.isExtiaConsulting && (\n                  <div className=\"absolute flex-1 flex bottom-0 left-[50%] bg-gradient-to-br translate-x-[-50%] from-[#ED7003] to-[#EF7E02] rounded-tl-lg rounded-tr-lg text-sm pl-4 pr-4\">\n                    <span className=\"text-white\">Extia consulting</span>\n                  </div>\n                )}\n              </div>\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n", "import dayjs from \"dayjs\";\n\nexport const formatDate = (date: string) =>\n  !date || date === \"Now\" ? \"Now\" : dayjs(date).format(\"MMM YYYY\");\n", "import {\n  ActionArgs,\n  LoaderArgs,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { useEffect } from \"react\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n\nimport { auth } from \"~/services/api\";\nimport { getSession } from \"~/services/cookies/auth\";\nimport { useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { useSessionCommitter } from \"~/services/hooks/session.server\";\n\nexport let meta: MetaFunction = () => ({\n  title: \"Jason Van Malder\",\n  description: \"25yo, software engineer and student by night.\",\n});\n\nexport async function loader({ request }: LoaderArgs) {\n  return getSession(request.headers.get(\"Cookie\"));\n}\n\nexport async function action({ request }: ActionArgs) {\n  const data = await request.formData();\n  const user = JSON.parse(data.get(\"user\") as string);\n\n  return useSessionCommitter(request, user);\n}\n\nconst Admin = () => {\n  const { data } = useLoaderData();\n  const submit = useSubmit();\n\n  const signInWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    await signInWithPopup(auth, provider);\n  };\n\n  const waitForUser = async () => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        const formData = new FormData();\n        formData.set(\"user\", JSON.stringify(user));\n        submit(formData, { method: \"post\" });\n      }\n    });\n  };\n\n  useEffect(() => {\n    waitForUser();\n  }, []);\n\n  useEffect(() => {\n    if (data.access_token && auth.currentUser) {\n      window.location.href = \"/admin/dashboard\";\n    }\n  }, []);\n\n  if (data.access_token) {\n    return null;\n  }\n\n  return (\n    <div className=\"max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8\">\n      <div className=\"max-w-lg mx-auto\">\n        <h1 className=\"text-2xl font-bold text-center text-indigo-600 sm:text-3xl\">\n          Hello, boss.\n        </h1>\n\n        <p className=\"max-w-md mx-auto mt-4 text-center text-gray-500\">\n          Please sign in to confirm your identity.\n        </p>\n\n        <div className=\"bg-white p-8 mt-6 mb-0 space-y-4 rounded-lg shadow-2xl\">\n          <span\n            onClick={signInWithGoogle}\n            className=\"block w-full px-5 py-3 text-sm font-medium text-white bg-indigo-600 rounded-lg text-center cursor-pointer\"\n          >\n            Sign in with Google\n          </span>\n\n          <p className=\"text-sm text-center text-gray-500\">\n            You are not the boss? Then what are you doing here? \uD83E\uDD14\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n", "import { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport { Experience } from \"~/domain/experience\";\nimport { Development } from \"~/domain/development\";\n\nimport { Header } from \"~/application/ui/components/common/Header\";\nimport { Footer } from \"~/application/ui/components/common/Footer\";\nimport { AboutScreen } from \"~/application/ui/screens/AboutScreen\";\n\nimport { useExperiencesQuery } from \"~/services/queries/experiences\";\nimport { useDevelopmentsQuery } from \"~/services/queries/developments\";\nimport { useGetSortedExperiences } from \"~/application/cases/experiences/getSortedExperiences\";\nimport { useEffect, useState } from \"react\";\n\ntype LoaderData = {\n  experiences: Experience[];\n  developments: Development[];\n};\n\nexport let meta: MetaFunction = () => ({\n  title: \"Jason Van Malder\",\n  description: \"25yo, software engineer and student by night.\",\n});\n\nexport let loader: LoaderFunction = async (): Promise<LoaderData> => ({\n  experiences: await useExperiencesQuery().run(),\n  developments: await useDevelopmentsQuery().run(),\n});\n\nconst About = () => {\n  const { getSortedExperiences } = useGetSortedExperiences();\n  const { experiences, developments } = useLoaderData<LoaderData>();\n  const sortedExperiences = getSortedExperiences(experiences);\n\n  const [keys, setKeys] = useState<string[]>([]);\n\n  useEffect(() => {\n    window.onkeydown = (e) => {\n      if (\n        e.key.toLowerCase() === \"t\" ||\n        e.key.toLowerCase() === \"e\" ||\n        e.key.toLowerCase() === \"k\"\n      ) {\n        setKeys([...keys, e.key.toLowerCase()]);\n      } else {\n        setKeys([]);\n      }\n    };\n\n    return () => {\n      window.onkeydown = null;\n      window.onkeyup = null;\n    };\n  }, [keys, setKeys]);\n\n  useEffect(() => {\n    const [first, second, third] = keys;\n\n    if (first === \"t\" && second === \"e\" && third === \"k\") {\n      window.location.href = \"/admin\";\n    }\n  }, [keys]);\n\n  return (\n    <>\n      <Header />\n      <AboutScreen\n        experiences={sortedExperiences}\n        developments={developments}\n      />\n      <Footer />\n    </>\n  );\n};\n\nexport default About;\n", "import classNames from \"classnames\";\nimport { LoaderFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\nimport { Theme, useTheme } from \"~/services/hooks/theme-provider\";\n\nimport { Container } from \"~/application/ui/components/common/Container\";\nimport { useGetSettingsFromRequest } from \"~/application/cases/cookieSettings/getSettingsFromRequest\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { getSettingsFromRequest } = useGetSettingsFromRequest();\n  return getSettingsFromRequest(request);\n};\n\nexport const Header = () => {\n  // const [theme, setTheme] = useTheme();\n\n  const onThemeSwitchClick = () => {\n    // setTheme((previousTheme: Theme | null) => {\n    //   if (previousTheme === Theme.LIGHT) {\n    //     return Theme.DARK;\n    //   }\n    //   return Theme.LIGHT;\n    // });\n  };\n\n  return (\n    <Container>\n      <header className=\"app-header\">\n        <Link to=\"/\" prefetch=\"intent\" className=\"navLink\">\n          <span className=\"logo\">\n            <span className=\"text-slate-700 dark:text-slate-100\">Jason</span>{\" \"}\n            <span className=\"text--primary\">Van Malder</span>\n          </span>\n        </Link>\n\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" prefetch=\"intent\" className=\"navLink select-none\">\n                Blog\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/about\"\n                prefetch=\"intent\"\n                className=\"navLink select-none\"\n              >\n                About\n              </Link>\n            </li>\n          </ul>\n        </nav> */}\n        <div></div>\n        {/* <button\n          className={classNames(\n            \"cursor-pointer flex items-center align-center p-2 rounded-full hover:scale-125 transition duration-300 select-none\",\n            {\n              \"bg-slate-800 text-white\": theme === Theme.LIGHT,\n              \"bg-slate-100\": theme === Theme.DARK,\n            }\n          )}\n          type=\"submit\"\n          onClick={onThemeSwitchClick}\n        >\n          {theme === Theme.DARK ? <FaSun /> : <FaMoon />}\n        </button> */}\n      </header>\n    </Container>\n  );\n};\n", "import { FaGithub, FaInstagram, FaTwitter } from \"react-icons/fa\";\n\nimport { Container } from \"~/application/ui/components/common/Container\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"py-10\">\n      <Container className=\"flex flex-col justify-center items-center text-indigo-300\">\n        <h2>\n          All rights reserved \u00A9 Jason Van Malder {new Date().getFullYear()}\n        </h2>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.instagram.com/jvnm_dev/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"instagram navLink text-indigo-300\"\n            >\n              <FaInstagram />\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://twitter.com/jvnm_dev\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"twitter navLink text-indigo-300\"\n            >\n              <FaTwitter />\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/jvnm-dev\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"github navLink text-indigo-300\"\n            >\n              <FaGithub />\n            </a>\n          </li>\n        </ul>\n      </Container>\n    </footer>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\nimport Image from \"~/application/ui/svg/about.svg\";\n\nexport const Jumbotron = () => {\n  const isLargeDevice = useMediaQuery({ minWidth: 1280 });\n  const shouldShowImage = useMediaQuery({ minWidth: 1025 });\n  const [subtitleWidth, setSubtitleWidth] = useState(0);\n\n  useEffect(() => {\n    setSubtitleWidth(isLargeDevice ? 550 : 450);\n  }, [isLargeDevice]);\n\n  return (\n    <div className=\"grid gap-4 grid-cols-1 lg:grid-cols-2 my-20\">\n      <div className=\"flex flex-col justify-center\">\n        <Typography\n          variant=\"title\"\n          level={1}\n          className=\"font-bold dark:text-slate-100 text-8xl xl:text-9xl\"\n        >\n          Software Engineer\n        </Typography>\n        <Typography\n          variant=\"title\"\n          level={3}\n          className=\"mt-8 leading-8 text-gray-500 dark:text-slate-100\"\n          style={{ width: subtitleWidth }}\n        >\n          In consultancy at{\" \"}\n          <a\n            href=\"https://www.haulogy.net/\"\n            className=\"font-bold text-transparent bg-clip-text bg-gradient-to-br from-haulogy-blue via-haulogy-purple to-haulogy-orange\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Haulogy\n          </a>\n          , a company that offers IT solutions both to Distribution Network\n          Managers and energy suppliers.\n        </Typography>\n\n        <Typography\n          variant=\"title\"\n          level={3}\n          className=\"mt-8 leading-8 text-gray-500 dark:text-slate-100\"\n          style={{ width: subtitleWidth }}\n        >\n          Also studying Computer Sciences at{\" \"}\n          <a\n            href=\"https://web.umons.ac.be/fr/\"\n            className=\"font-bold text-transparent bg-clip-text bg-gradient-to-br from-umons-red to-umons-red2\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            UMons\n          </a>\n          , to validate my skills and knowledge.\n        </Typography>\n      </div>\n\n      {shouldShowImage && (\n        <div className=\"flex justify-center items-center\">\n          <img src=\"/images/about.svg\" alt=\"about\" style={{ height: \"90%\" }} />\n        </div>\n      )}\n    </div>\n  );\n};\n", "import { FaCode, FaEye } from \"react-icons/fa\";\n\nimport { Development } from \"~/domain/development\";\n\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\ninterface IOwnProps {\n  developments: Development[];\n}\n\nexport const ProjectsList = ({ developments }: IOwnProps) => {\n  return (\n    <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-4\">\n      {developments.map((development) => {\n        return (\n          <div\n            key={`${development.name}`}\n            className=\"mb-4 bg-white bg-opacity-50 rounded-lg shadow-lg hover:bg-opacity-100 transition ease-in-out duration-500 dark:bg-slate-900 dark:text-slate-100 dark:shadow-indigo-500/25\"\n          >\n            <div className=\"flex items-center h-full\">\n              <img\n                src={development.image}\n                alt={development.name}\n                className=\"h-32 lg:h-48 rounded-l-lg shadow-md\"\n              />\n              <div className=\"m-4\">\n                <Typography\n                  variant=\"title\"\n                  level={3}\n                  className=\"font-normal mb-4\"\n                >\n                  {development.name}\n                </Typography>\n                <Typography variant=\"title\" level={6} className=\"font-normal\">\n                  {development.description}\n                </Typography>\n              </div>\n              <div className=\"flex-1 flex flex-col justify-end h-full\">\n                <a\n                  className=\"h-full hoverableButton\"\n                  href={development.demoUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <div className=\"h-full\">\n                    <span className=\"cursor-pointer button px-4 h-full experience-button\">\n                      <FaEye />\n                    </span>\n                  </div>\n                </a>\n                <a\n                  className=\"h-full hoverableButton\"\n                  href={development.sourceCodeUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <div className=\"h-full\">\n                    <span className=\"cursor-pointer button px-4 h-full experience-button\">\n                      <FaCode />\n                    </span>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n", "import { FaArrowRight } from \"react-icons/fa\";\n\nimport { formatDate } from \"~/lib/date\";\n\nimport { Experience } from \"~/domain/experience\";\n\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\ninterface IOwnProps {\n  experiences: Experience[];\n}\n\nexport const ExperiencesList = ({ experiences }: IOwnProps) => {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n      {experiences.map((experience) => (\n        <a\n          key={`${experience.place}`}\n          href={experience.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"relative mb-4 bg-white bg-opacity-50 rounded-lg shadow-lg hover:bg-opacity-100 transition ease-in-out duration-500 hoverableButton cursor-pointer dark:bg-slate-900 dark:text-slate-100 dark:shadow-indigo-500/25\"\n        >\n          <div className=\"flex items-center h-full\">\n            <img\n              src={experience.image}\n              alt={experience.place}\n              className=\"h-16 rounded-lg shadow-md m-4 dark:shadow-indigo-500/25\"\n            />\n            <div className=\"m-4 ml-0\">\n              <Typography variant=\"title\" level={3} className=\"font-normal\">\n                {experience.role}\n              </Typography>\n              <Typography>\n                {formatDate(experience.dateFrom)} -{\" \"}\n                {formatDate(experience.dateTo)}\n              </Typography>\n            </div>\n            <div className=\"flex-1 flex justify-end h-full\">\n              <span className=\"cursor-pointer button px-4 h-full rounded-r-lg experience-button\">\n                <FaArrowRight />\n              </span>\n            </div>\n\n            {experience.isExtiaConsulting && (\n              <div className=\"absolute flex-1 flex bottom-0 left-[50%] bg-gradient-to-br translate-x-[-50%] from-[#ED7003] to-[#EF7E02] rounded-tl-lg rounded-tr-lg text-sm pl-4 pr-4\">\n                <span className=\"text-white\">Extia consulting</span>\n              </div>\n            )}\n          </div>\n        </a>\n      ))}\n    </div>\n  );\n};\n", "import { Experience } from \"~/domain/experience\";\nimport { Development } from \"~/domain/development\";\n\nimport { Jumbotron } from \"~/application/ui/components/about/Jumbotron\";\nimport { Container } from \"~/application/ui/components/common/Container\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\nimport { ProjectsList } from \"~/application/ui/components/about/ProjectsList\";\nimport { ExperiencesList } from \"~/application/ui/components/about/ExperiencesList\";\n\ninterface IOwnProps {\n  experiences: Experience[];\n  developments: Development[];\n}\n\nexport const AboutScreen = ({ experiences, developments }: IOwnProps) => {\n  return (\n    <Container>\n      <Jumbotron />\n      <div>\n        <Typography\n          variant=\"title\"\n          level={2}\n          className=\"mb-8 text-6xl dark:text-slate-100\"\n        >\n          Career\n        </Typography>\n        <ExperiencesList experiences={experiences} />\n      </div>\n\n      <div>\n        <Typography\n          variant=\"title\"\n          level={2}\n          className=\"mt-16 mb-8 text-6xl dark:text-slate-100\"\n        >\n          Projects\n        </Typography>\n        <ProjectsList developments={developments} />\n      </div>\n    </Container>\n  );\n};\n", "import { Development } from \"~/domain/development\";\nimport { getCollection } from \"~/services/api\";\n\nexport const key = \"developments\";\n\nexport type DevelopmentsQuery = {\n  run: () => Promise<Development[]>;\n};\n\nexport const useDevelopmentsQuery = (): DevelopmentsQuery => {\n  const fetchDevelopments = async (): Promise<Development[]> => {\n    return getCollection(key);\n  };\n\n  return {\n    run: async (): Promise<Development[]> => fetchDevelopments(),\n  };\n};\n", "import dayjs from \"dayjs\";\nimport { Experience } from \"~/domain/experience\";\n\nexport const useGetSortedExperiences = () => {\n  const getSortedExperiences = (experiences: Experience[]) => {\n    if (!experiences?.length) {\n      return [];\n    }\n\n    return experiences.sort((a, b) => {\n      return dayjs(b.dateFrom).diff(dayjs(a.dateFrom));\n    });\n  };\n\n  return { getSortedExperiences };\n};\n", "export default {'version':'ec82677d','entry':{'module':'/build/entry.client-HXNH7XNR.js','imports':['/build/_shared/chunk-CWIXNHWE.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-QYMOWNCL.js','imports':['/build/_shared/chunk-OMWX3INQ.js','/build/_shared/chunk-5STQIBP4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/admin/dashboard/developments':{'id':'routes/admin/dashboard/developments','parentId':'root','path':'admin/dashboard/developments','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/developments-NPJQRKI7.js','imports':['/build/_shared/chunk-NUECXDAN.js','/build/_shared/chunk-635PHEEE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/dashboard/experiences/add':{'id':'routes/admin/dashboard/experiences/add','parentId':'root','path':'admin/dashboard/experiences/add','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/experiences/add-R3GTQIAT.js','imports':['/build/_shared/chunk-NUECXDAN.js','/build/_shared/chunk-635PHEEE.js','/build/_shared/chunk-4PPG7YQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/dashboard/index':{'id':'routes/admin/dashboard/index','parentId':'root','path':'admin/dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/index-2CYK5MBX.js','imports':['/build/_shared/chunk-NUECXDAN.js','/build/_shared/chunk-635PHEEE.js','/build/_shared/chunk-OYGQVULA.js','/build/_shared/chunk-4PPG7YQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/index':{'id':'routes/admin/index','parentId':'root','path':'admin','index':true,'caseSensitive':undefined,'module':'/build/routes/admin/index-X3D3D552.js','imports':['/build/_shared/chunk-635PHEEE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-EQOKFWFW.js','imports':['/build/_shared/chunk-OYGQVULA.js','/build/_shared/chunk-4PPG7YQR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-EC82677D.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/admin/dashboard/experiences/add.tsx\";\nimport * as route2 from \"./routes/admin/dashboard/developments.tsx\";\nimport * as route3 from \"./routes/admin/dashboard/index.tsx\";\nimport * as route4 from \"./routes/admin/index.tsx\";\nimport * as route5 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/admin/dashboard/experiences/add\": {\n      id: \"routes/admin/dashboard/experiences/add\",\n      parentId: \"root\",\n      path: \"admin/dashboard/experiences/add\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/admin/dashboard/developments\": {\n      id: \"routes/admin/dashboard/developments\",\n      parentId: \"root\",\n      path: \"admin/dashboard/developments\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/admin/dashboard/index\": {\n      id: \"routes/admin/dashboard/index\",\n      parentId: \"root\",\n      path: \"admin/dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/admin/index\": {\n      id: \"routes/admin/index\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": []
}
