{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/root.tsx", "../app/application/ui/components/common/Header.tsx", "../app/application/ui/components/common/Container.tsx", "../app/services/cookies/userPreferences.ts", "../app/application/cases/cookieSettings/getSettingsFromRequest.ts", "../app/application/ui/components/common/Footer.tsx", "../app/application/ui/components/common/Typography.tsx", "../app/application/cases/cookieSettings/setSettingsAndRedirect.ts", "../app/services/hooks/theme-provider.tsx", "../app/routes/index.tsx", "../app/application/ui/components/about/Jumbotron.tsx", "../app/application/ui/components/about/ProjectsList.tsx", "../app/application/ui/components/about/ExperiencesList.tsx", "../app/lib/date.ts", "../app/application/ui/screens/AboutScreen.tsx", "../app/services/api.ts", "../app/services/queries/experiences.ts", "../app/services/queries/developments.ts", "../app/application/cases/experiences/getSortedExperiences.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  ActionFunction,\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useTransition,\n} from \"@remix-run/react\";\nimport classNames from \"classnames\";\n\nimport { Header } from \"~/application/ui/components/common/Header\";\nimport { Footer } from \"~/application/ui/components/common/Footer\";\nimport { Container } from \"~/application/ui/components/common/Container\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\nimport { useGetSettingsFromRequest } from \"~/application/cases/cookieSettings/getSettingsFromRequest\";\nimport { useSetSettingsAndRedirect } from \"~/application/cases/cookieSettings/setSettingsAndRedirect\";\n\nimport { ThemeProvider } from \"~/services/hooks/theme-provider\";\n\nimport tailwindStylesUrl from \"~/styles/tailwind.css\";\nimport globalStylesUrl from \"~/styles/global.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"preload\",\n      href: \"/images/background.svg\",\n      as: \"image\",\n      type: \"image/svg+xml\",\n    },\n    { rel: \"stylesheet\", href: tailwindStylesUrl },\n    { rel: \"stylesheet\", href: globalStylesUrl },\n  ];\n};\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <Document>\n        <Layout>\n          <Outlet />\n        </Layout>\n      </Document>\n    </ThemeProvider>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <Container>\n          <h1>There was an error</h1>\n          <Typography>{error.message}</Typography>\n          <hr />\n          <Typography>\n            Please contact me by{\" \"}\n            <a href=\"mailto:jasonvanmalder@gmail.com\">email</a>\n          </Typography>\n        </Container>\n      </Layout>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <Typography>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </Typography>\n      );\n      break;\n    case 404:\n      message = (\n        <Typography>\n          Oops! Looks like you tried to visit a page that does not exist.\n        </Typography>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { getSettingsFromRequest } = useGetSettingsFromRequest();\n  return getSettingsFromRequest(request);\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const { setSettingsAndRedirect } = useSetSettingsAndRedirect();\n  return setSettingsAndRedirect(request);\n};\n\nexport const Document = ({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) => {\n  // const [theme] = useTheme();\n  const { state } = useTransition();\n\n  return (\n    <html\n      lang=\"en\"\n      className={classNames({\n        // dark: theme === Theme.DARK,\n      })}\n    >\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body className={classNames(\"bg-slate-100 dark:bg-slate-900\")}>\n        <div\n          className={classNames(\"loading-bar\", {\n            active: state === \"loading\",\n          })}\n        />\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n};\n\nexport const Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"background\">\n      <Header />\n\n      <main>{children}</main>\n\n      <Footer />\n    </div>\n  );\n};\n", "import classNames from \"classnames\";\nimport { LoaderFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\nimport { Theme, useTheme } from \"~/services/hooks/theme-provider\";\n\nimport { Container } from \"~/application/ui/components/common/Container\";\nimport { useGetSettingsFromRequest } from \"~/application/cases/cookieSettings/getSettingsFromRequest\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { getSettingsFromRequest } = useGetSettingsFromRequest();\n  return getSettingsFromRequest(request);\n};\n\nexport const Header = () => {\n  // const [theme, setTheme] = useTheme();\n\n  const onThemeSwitchClick = () => {\n    // setTheme((previousTheme: Theme | null) => {\n    //   if (previousTheme === Theme.LIGHT) {\n    //     return Theme.DARK;\n    //   }\n    //   return Theme.LIGHT;\n    // });\n  };\n\n  return (\n    <Container>\n      <header className=\"app-header\">\n        <Link to=\"/\" prefetch=\"intent\" className=\"navLink\">\n          <span className=\"logo\">\n            <span className=\"text-slate-700 dark:text-slate-100\">Jason</span>{\" \"}\n            <span className=\"text--primary\">Van Malder</span>\n          </span>\n        </Link>\n\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" prefetch=\"intent\" className=\"navLink select-none\">\n                Blog\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/about\"\n                prefetch=\"intent\"\n                className=\"navLink select-none\"\n              >\n                About\n              </Link>\n            </li>\n          </ul>\n        </nav> */}\n        <div></div>\n        {/* <button\n          className={classNames(\n            \"cursor-pointer flex items-center align-center p-2 rounded-full hover:scale-125 transition duration-300 select-none\",\n            {\n              \"bg-slate-800 text-white\": theme === Theme.LIGHT,\n              \"bg-slate-100\": theme === Theme.DARK,\n            }\n          )}\n          type=\"submit\"\n          onClick={onThemeSwitchClick}\n        >\n          {theme === Theme.DARK ? <FaSun /> : <FaMoon />}\n        </button> */}\n      </header>\n    </Container>\n  );\n};\n", "import classNames from \"classnames\";\n\ninterface IOwnProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const Container = ({ children, className }: IOwnProps) => {\n  return (\n    <div className={classNames(\"app container mx-auto px-20\", className)}>\n      {children}\n    </div>\n  );\n};\n", "import { createCookie } from \"@remix-run/node\";\n\nexport const userPreferences = createCookie(\"userPreferences\", {\n  httpOnly: true,\n  secure: true,\n  sameSite: true,\n  maxAge: 60 * 60 * 24 * 365 * 100,\n});\n", "import { CookieSettings } from \"~/domain/cookieSettings\";\nimport { userPreferences } from \"~/services/cookies/userPreferences\";\n\nexport const useGetSettingsFromRequest = () => {\n  const getSettingsFromRequest = async (\n    request: Request\n  ): Promise<CookieSettings> => {\n    const cookieHeader = request.headers.get(\"Cookie\");\n    return (await userPreferences.parse(cookieHeader)) || {};\n  };\n\n  return { getSettingsFromRequest };\n};\n", "import { FaGithub, FaInstagram, FaTwitter } from \"react-icons/fa\";\n\nimport { Container } from \"~/application/ui/components/common/Container\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"py-10\">\n      <Container className=\"flex flex-col justify-center items-center text-indigo-300\">\n        <h2>\n          All rights reserved \u00A9 Jason Van Malder {new Date().getFullYear()}\n        </h2>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.instagram.com/jvnm_dev/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"instagram navLink text-indigo-300\"\n            >\n              <FaInstagram />\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://twitter.com/jvnm_dev\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"twitter navLink text-indigo-300\"\n            >\n              <FaTwitter />\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/jvnm-dev\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"github navLink text-indigo-300\"\n            >\n              <FaGithub />\n            </a>\n          </li>\n        </ul>\n      </Container>\n    </footer>\n  );\n};\n", "import classNames from \"classnames\";\n\nexport type Typography = \"title\" | \"subtitle\" | \"text\" | \"semibold\";\n\ninterface IOwnProps {\n  variant?: Typography;\n  className?: string;\n  style?: React.CSSProperties;\n  level?: number;\n  children: React.ReactNode;\n}\n\nexport const Typography: React.FC<IOwnProps> = ({\n  variant = \"text\",\n  className,\n  style,\n  level,\n  children,\n}) => {\n  const textSizeDefined =\n    className?.includes(\"text-md\") ||\n    className?.includes(\"text-lg\") ||\n    className?.includes(\"text-xl\") ||\n    className?.includes(\"text-2xl\") ||\n    className?.includes(\"text-3xl\") ||\n    className?.includes(\"text-4xl\") ||\n    className?.includes(\"text-5xl\") ||\n    className?.includes(\"text-6xl\") ||\n    className?.includes(\"text-7xl\") ||\n    className?.includes(\"text-8xl\") ||\n    className?.includes(\"text-9xl\");\n\n  const fontWeightDefined = className?.includes(\"font-\");\n\n  const isTitle = [\"title\", \"subtitle\"].includes(variant);\n  const isText = [\"text\"].includes(variant);\n\n  const classes = classNames(\n    {\n      \"sm:text-2xl lg:text-3xl xl:text-4xl\":\n        isTitle && level === 1 && !textSizeDefined,\n      \"sm:text-xl lg:text-2xl xl:text-3xl\":\n        isTitle && level === 2 && !textSizeDefined,\n      \"sm:text-lg lg:text-xl xl:text-2xl\":\n        isTitle && level === 3 && !textSizeDefined,\n      \"sm:text-md lg:text-lg xl:text-xl\":\n        isTitle && level === 4 && !textSizeDefined,\n      \"sm:text-sm lg:text-md xl:text-lg\":\n        isTitle && level === 5 && !textSizeDefined,\n      \"sm:text-xs lg:text-sm xl:text-md\":\n        ((isTitle && level === 6) || isText) && !textSizeDefined,\n      \"font-semibold\": [\"semibold\"].includes(variant) && !fontWeightDefined,\n      \"font-bold\": [\"bold\"].includes(variant) && !fontWeightDefined,\n    },\n    className\n  );\n\n  if ([\"title\", \"subtitle\"].includes(variant)) {\n    if (level === 1) {\n      return (\n        <h1 className={classes} style={style}>\n          {children}\n        </h1>\n      );\n    }\n\n    if (level === 2) {\n      return (\n        <h2 className={classes} style={style}>\n          {children}\n        </h2>\n      );\n    }\n\n    if (level === 3) {\n      return (\n        <h3 className={classes} style={style}>\n          {children}\n        </h3>\n      );\n    }\n\n    if (level === 4) {\n      return (\n        <h4 className={classes} style={style}>\n          {children}\n        </h4>\n      );\n    }\n\n    if (level === 5) {\n      return (\n        <h5 className={classes} style={style}>\n          {children}\n        </h5>\n      );\n    }\n\n    if (level === 6) {\n      return (\n        <h6 className={classes} style={style}>\n          {children}\n        </h6>\n      );\n    }\n  }\n\n  return (\n    <p className={classes} style={style}>\n      {children}\n    </p>\n  );\n};\n", "import { redirect } from \"@remix-run/node\";\n\nimport { CookieSettings } from \"~/domain/cookieSettings\";\n\nimport { userPreferences } from \"~/services/cookies/userPreferences\";\n\nexport const useSetSettingsAndRedirect = () => {\n  const setSettingsAndRedirect = async (request: Request) => {\n    const cookieHeader = request.headers.get(\"Cookie\");\n    const bodyParams = await request.formData();\n    const destination = bodyParams.get(\"destination\")?.toString() ?? \"/\";\n\n    let cookie: CookieSettings =\n      (await userPreferences.parse(cookieHeader)) || {};\n\n    cookie = {\n      ...cookie,\n      darkModeEnabled: bodyParams.get(\"darkModeEnabled\") === \"true\",\n    };\n\n    return redirect(destination, {\n      headers: {\n        \"Set-Cookie\": await userPreferences.serialize(cookie),\n      },\n    });\n  };\n\n  return { setSettingsAndRedirect };\n};\n", "import { createContext, useContext, useState } from \"react\";\nimport type { Dispatch, ReactNode, SetStateAction } from \"react\";\n\nenum Theme {\n  DARK = \"dark\",\n  LIGHT = \"light\",\n}\n\ntype ThemeContextType = [Theme | null, Dispatch<SetStateAction<Theme | null>>];\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme | null>(Theme.LIGHT);\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n\n  return context;\n}\n\nexport { Theme, ThemeProvider, useTheme };\n", "import { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport { Experience } from \"~/domain/experience\";\nimport { Development } from \"~/domain/development\";\n\nimport { AboutScreen } from \"~/application/ui/screens/AboutScreen\";\n\nimport { useExperiencesQuery } from \"~/services/queries/experiences\";\nimport { useDevelopmentsQuery } from \"~/services/queries/developments\";\nimport { useGetSortedExperiences } from \"~/application/cases/experiences/getSortedExperiences\";\n\ntype LoaderData = {\n  experiences: Experience[];\n  developments: Development[];\n};\n\nexport let meta: MetaFunction = () => ({\n  title: \"Jason Van Malder\",\n  description: \"A blog about web development, React, and more.\",\n});\n\nexport let loader: LoaderFunction = async (): Promise<LoaderData> => ({\n  experiences: await useExperiencesQuery().run(),\n  developments: await useDevelopmentsQuery().run(),\n});\n\nconst About = () => {\n  const { getSortedExperiences } = useGetSortedExperiences();\n  const { experiences, developments } = useLoaderData<LoaderData>();\n  const sortedExperiences = getSortedExperiences(experiences);\n\n  return (\n    <AboutScreen experiences={sortedExperiences} developments={developments} />\n  );\n};\n\nexport default About;\n", "import { useMediaQuery } from \"react-responsive\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\nexport const Jumbotron = () => {\n  const isLargeDevice = useMediaQuery({ minWidth: 1280 });\n  const shouldShowImage = useMediaQuery({ minWidth: 1025 });\n\n  return (\n    <div className=\"grid gap-4 grid-cols-1 lg:grid-cols-2 my-20\">\n      <div className=\"flex flex-col justify-center\">\n        <Typography\n          variant=\"title\"\n          level={1}\n          className=\"font-bold dark:text-slate-100 text-8xl xl:text-9xl\"\n        >\n          Software Engineer\n        </Typography>\n        <Typography\n          variant=\"title\"\n          level={3}\n          className=\"mt-8 leading-8 text-gray-500 dark:text-slate-100\"\n          style={{ width: isLargeDevice ? 550 : 400 }}\n        >\n          In consultancy at{\" \"}\n          <a\n            href=\"https://www.haulogy.net/\"\n            className=\"font-bold text-transparent bg-clip-text bg-gradient-to-br from-haulogy-blue via-haulogy-purple to-haulogy-orange\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Haulogy\n          </a>\n          , a company that offers IT solutions both to Distribution Network\n          Managers and energy suppliers.\n        </Typography>\n      </div>\n\n      {shouldShowImage && (\n        <div className=\"flex justify-center items-center\">\n          <img src=\"/images/about.svg\" alt=\"about\" className=\"h-96\" />\n        </div>\n      )}\n    </div>\n  );\n};\n", "import { FaCode, FaEye } from \"react-icons/fa\";\n\nimport { Development } from \"~/domain/development\";\n\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\ninterface IOwnProps {\n  developments: Development[];\n}\n\nexport const ProjectsList = ({ developments }: IOwnProps) => {\n  return (\n    <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-4\">\n      {developments.map((development) => {\n        return (\n          <div\n            key={`${development.name}`}\n            className=\"mb-4 bg-white bg-opacity-50 rounded-lg shadow-lg hover:bg-opacity-100 transition ease-in-out duration-500 dark:bg-slate-900 dark:text-slate-100 dark:shadow-indigo-500/25\"\n          >\n            <div className=\"flex items-center h-full\">\n              <img\n                src={development.image}\n                alt={development.name}\n                className=\"h-32 lg:h-48 rounded-l-lg shadow-md\"\n              />\n              <div className=\"m-4\">\n                <Typography\n                  variant=\"title\"\n                  level={3}\n                  className=\"font-normal mb-4\"\n                >\n                  {development.name}\n                </Typography>\n                <Typography variant=\"title\" level={6} className=\"font-normal\">\n                  {development.description}\n                </Typography>\n              </div>\n              <div className=\"flex-1 flex flex-col justify-end h-full\">\n                <a\n                  className=\"h-full hoverableButton\"\n                  href={development.demoUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <div className=\"h-full\">\n                    <span className=\"cursor-pointer button px-4 h-full experience-button\">\n                      <FaEye />\n                    </span>\n                  </div>\n                </a>\n                <a\n                  className=\"h-full hoverableButton\"\n                  href={development.sourceCodeUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <div className=\"h-full\">\n                    <span className=\"cursor-pointer button px-4 h-full experience-button\">\n                      <FaCode />\n                    </span>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n", "import { FaArrowRight } from \"react-icons/fa\";\n\nimport { formatDate } from \"~/lib/date\";\n\nimport { Experience } from \"~/domain/experience\";\n\nimport { Typography } from \"~/application/ui/components/common/Typography\";\n\ninterface IOwnProps {\n  experiences: Experience[];\n}\n\nexport const ExperiencesList = ({ experiences }: IOwnProps) => {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n      {experiences.map((experience) => (\n        <a\n          key={`${experience.place}`}\n          href={experience.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"relative mb-4 bg-white bg-opacity-50 rounded-lg shadow-lg hover:bg-opacity-100 transition ease-in-out duration-500 hoverableButton cursor-pointer dark:bg-slate-900 dark:text-slate-100 dark:shadow-indigo-500/25\"\n        >\n          <div className=\"flex items-center h-full\">\n            <img\n              src={experience.image}\n              alt={experience.place}\n              className=\"h-16 rounded-lg shadow-md m-4 dark:shadow-indigo-500/25\"\n            />\n            <div className=\"m-4 ml-0\">\n              <Typography variant=\"title\" level={3} className=\"font-normal\">\n                {experience.role}\n              </Typography>\n              <Typography>\n                {formatDate(experience.dateFrom)} -{\" \"}\n                {formatDate(experience.dateTo)}\n              </Typography>\n            </div>\n            <div className=\"flex-1 flex justify-end h-full\">\n              <span className=\"cursor-pointer button px-4 h-full rounded-r-lg experience-button\">\n                <FaArrowRight />\n              </span>\n            </div>\n\n            {experience.isExtiaConsulting && (\n              <div className=\"absolute flex-1 flex bottom-0 left-[50%] bg-gradient-to-br translate-x-[-50%] from-[#ED7003] to-[#EF7E02] rounded-tl-lg rounded-tr-lg text-sm pl-4 pr-4\">\n                <span className=\"text-white\">Extia consulting</span>\n              </div>\n            )}\n          </div>\n        </a>\n      ))}\n    </div>\n  );\n};\n", "import dayjs from \"dayjs\";\n\nexport const formatDate = (date: string) =>\n  !date || date === \"Now\" ? \"Now\" : dayjs(date).format(\"MMM YYYY\");\n", "import { Experience } from \"~/domain/experience\";\nimport { Development } from \"~/domain/development\";\n\nimport { Jumbotron } from \"~/application/ui/components/about/Jumbotron\";\nimport { Container } from \"~/application/ui/components/common/Container\";\nimport { Typography } from \"~/application/ui/components/common/Typography\";\nimport { ProjectsList } from \"~/application/ui/components/about/ProjectsList\";\nimport { ExperiencesList } from \"~/application/ui/components/about/ExperiencesList\";\n\ninterface IOwnProps {\n  experiences: Experience[];\n  developments: Development[];\n}\n\nexport const AboutScreen = ({ experiences, developments }: IOwnProps) => {\n  return (\n    <Container>\n      <Jumbotron />\n      <div>\n        <Typography\n          variant=\"title\"\n          level={2}\n          className=\"mb-8 text-6xl dark:text-slate-100\"\n        >\n          Career\n        </Typography>\n        <ExperiencesList experiences={experiences} />\n      </div>\n\n      <div>\n        <Typography\n          variant=\"title\"\n          level={2}\n          className=\"mt-16 mb-8 text-6xl dark:text-slate-100\"\n        >\n          Projects\n        </Typography>\n        <ProjectsList developments={developments} />\n      </div>\n    </Container>\n  );\n};\n", "import { initializeApp } from \"firebase/app\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\n\nconst firebase = initializeApp({\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.FIREBASE_PROJECT_ID,\n});\n\nexport const firestore = getFirestore(firebase);\n\nexport const getCollection = async <T>(key: string): Promise<T[]> => {\n  const querySnapshot = await getDocs(collection(firestore, key));\n  return querySnapshot.docs.map((doc) => doc.data() as T);\n};\n", "import { Experience } from \"~/domain/experience\";\nimport { getCollection } from \"~/services/api\";\n\nexport const key = \"experiences\";\n\nexport type ExperiencesQuery = {\n  run: () => Promise<Experience[]>;\n};\n\nexport const useExperiencesQuery = (): ExperiencesQuery => {\n  const fetchExperiences = async (): Promise<Experience[]> => {\n    return getCollection(key);\n  };\n\n  return {\n    run: async (): Promise<Experience[]> => fetchExperiences(),\n  };\n};\n", "import { Development } from \"~/domain/development\";\nimport { getCollection } from \"~/services/api\";\n\nexport const key = \"developments\";\n\nexport type DevelopmentsQuery = {\n  run: () => Promise<Development[]>;\n};\n\nexport const useDevelopmentsQuery = (): DevelopmentsQuery => {\n  const fetchDevelopments = async (): Promise<Development[]> => {\n    return getCollection(key);\n  };\n\n  return {\n    run: async (): Promise<Development[]> => fetchDevelopments(),\n  };\n};\n", "import dayjs from \"dayjs\";\nimport { Experience } from \"~/domain/experience\";\n\nexport const useGetSortedExperiences = () => {\n  const getSortedExperiences = (experiences: Experience[]) => {\n    if (!experiences?.length) {\n      return [];\n    }\n\n    return experiences.sort((a, b) => {\n      return dayjs(b.dateFrom).diff(dayjs(a.dateFrom));\n    });\n  };\n\n  return { getSortedExperiences };\n};\n", "export default {'version':'30b60ca0','entry':{'module':'/build/entry.client-OCUUYPZT.js','imports':['/build/_shared/chunk-HTGVWHPS.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-TXNWNTVM.js','imports':['/build/_shared/chunk-S53VHVCM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-QNZBUFL2.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-30B60CA0.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
